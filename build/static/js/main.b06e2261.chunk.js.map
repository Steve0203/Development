{"version":3,"sources":["component/card/card.module.css","Redux/globalActions.js","Redux/api.js","Redux/slices/azelis/azelisSlice.js","utils/function.js","component/card/card.js","component/cardimage/cardimage.js","component/boxresults/filter/filter.js","component/boxtype/boxtype.js","component/util/Accordion.js","component/boxresults/SideFilter/index.js","component/boxresults/TrendsFilter/index.js","utils/hooks/useLoadSection.js","component/boxresults/BoxResults.js","hooks/useWindowSize.js","component/FilterBoxPage/index.js","Redux/slices/navigationSlice.js","component/Navbar/index.js","component/searchbar/searchbar.js","App.js","reportWebVitals.js","Redux/store.js","index.js"],"names":["module","exports","goTo","createAction","doSearch","resetFilter","Api","this","base_url","window","location","protocol","host","api_url","axios","create","baseURL","slug","a","get","params","maxContentLength","dataType","filterSlug","initStore","createAsyncThunk","api","getProfiles","res","data","loadItems","_args","thunkAPI","getState","navigation","page","getItems","loadFilterData","initFilters","resetFilterBase","state","Object","values","categories","dataSet","filter","filters","search","azelisSlice","createSlice","name","initialState","reducers","toggleFilter","action","payload","hasOwnProperty","taxonomy","filterList","filterIndex","findIndex","termSlug","splice","push","setFilterExclusive","includes","keys","filterKey","setLoad","loading","setSearchBox","extraReducers","builder","addCase","fulfilled","item","internalItemIndex","internalItem","id","entries","post_types","label","taxonomies","Set","displayType","length","actions","selectTabs","azelis","map","selectPageType","selectFilters","selectSearch","selectLoading","selectFilteredResults","baseFiltered","every","filterArray","some","tags","tag","taxonomy_label","isSearching","atResults","searchQuery","searchOptions","weight","threshold","Fuse","result","selectAllTerms","output","outputTag","selectBoxes","createSelector","dynamicTaxonomies","itemsData","globallyFilteredItems","reduce","boxes","box","terms","dynamicTaxonomy","itemFilters","otherFilters","filteredItems","filterTaxonomy","tagSlugs","has","add","count","itemTag","replace","checked","boxCopy","sort","b","localeCompare","numberWithCommas","x","toString","makeShorter","character","description","words","split","index","Card","e","className","style","marginBottom","href","url","target","rel","textDecoration","color","styles","height","marginRight","title","body","CardImage","backgroundImage","thumbnail","Filter","list","onClose","on_click_reset_filter","dispatch","useDispatch","onClick","CheckLineLittle","section","useSelector","selectPage","type","onChange","console","log","CheckLine","htmlFor","Boxtype","isLoading","border","opacity","paddingTop","marginTop","term","Accordion","items","useState","accordianState","key","setAccordianState","accordian","expanded","itemKey","oldState","AccordionItem","accordianBodyRef","useRef","accordianItem","cursor","expandable","accordianHeader","header","chevron","chevronExpanded","chevronNull","Boolean","alwaysBody","accordianBody","alwaysShow","accordianExpanded","current","scrollHeight","ref","display","flexDirection","width","borderTop","alignItems","justifyContent","fontWeight","transition","maxHeight","overflow","transform","backgroundColor","margin","SideFilter","filterBoxes","accordionItems","useMemo","termToCheckLine","padding","filterBox","unchecked","paddingBottom","MenuTrend","clickHandler","i","useLoadSection","loadingState","useEffect","BoxResults","results","loadState","pageType","useImageCard","goBack","showResults","fontSize","TrendsFilter","paddingLeft","Button","variant","size","scroll","top","left","behavior","useWindowSize","undefined","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","SwiperCore","use","Pagination","Navigation","FormulasBoxFilter","totalCount","breakPoints","setBreakPoints","SwiperSlides","fontFamily","spaceBetween","observer","slidesPerView","navigationSlice","previous","validPages","pages","selectDisplayComponent","currentCategory","FilterBoxPage","active","borderBottom","inactive","Navbar","tabs","activeTab","Searchbar","query","localQuery","setLocalQuery","onSubmit","evt","preventDefault","placeholder","value","App","DisplayComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","navigationReducer","azelisReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.b06e2261.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-card\":\"card_main-card__3qq3_\",\"header-card\":\"card_header-card__1bWf7\",\"card-mini-des\":\"card_card-mini-des__1dfdJ\",\"card-des\":\"card_card-des__3ZOJo\"};","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport const goTo = createAction('goTo');\r\nexport const doSearch = createAction('doSearch');\r\nexport const resetFilter = createAction('resetFilter');\r\n","import axios from \"axios\";\r\n\r\nclass Api {\r\n  constructor() {\r\n    this.base_url = window.location.protocol + \"//\" + window.location.host;\r\n    this.api_url =\r\n      this.base_url == \"http://localhost:3000\"\r\n        ? \"https://dewolfchemdev.wpengine.com\"\r\n        : this.base_url;\r\n    this.axios = axios.create({\r\n      baseURL: this.api_url + '/api'\r\n    })\r\n  }\r\n\r\n  async initFilters(slug) {\r\n    return this.axios.get('/', {\r\n      params: {\r\n        'data_type': slug,\r\n        'request': 'getPosts'\r\n      },\r\n      maxContentLength: 6000000\r\n    })\r\n  }\r\n\r\n  async getItems(dataType) {\r\n    return this.axios.get('/', {\r\n      params: {\r\n        'data_type': dataType,\r\n        'request': 'posts'\r\n      }\r\n    })\r\n  }\r\n\r\n  async reloadTrends(filterSlug) {\r\n    return this.axios.get('/', {\r\n      params: {\r\n        'data_type': 'post',\r\n        'request': 'posts',\r\n        'category': filterSlug\r\n      }\r\n    })\r\n  }\r\n\r\n  async getProfiles() {\r\n    return this.axios.get('/', {\r\n      params: {\r\n        'request': 'profile'\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default Api\r\n","import { createAsyncThunk, createSelector, createSlice } from '@reduxjs/toolkit'\r\nimport { goTo, doSearch, resetFilter } from '../../globalActions'\r\nimport Api from '../../api'\r\nimport Fuse from 'fuse.js';\r\n\r\nimport boxes from './boxes.js'\r\n\r\nexport const initStore = createAsyncThunk('/azelis/initStoreStatus', async () => {\r\n  const api = new Api();\r\n  const res = await api.getProfiles()\r\n\r\n  return res.data;\r\n})\r\n\r\nexport const loadItems = createAsyncThunk('/azelis/loadItemsStatus', async (_args, thunkAPI) => {\r\n  const api = new Api();\r\n  const slug = thunkAPI.getState().navigation.page;\r\n\r\n  const res = await api.getItems(slug);\r\n\r\n  return {\r\n    data: res.data,\r\n    slug\r\n  }\r\n})\r\n\r\nexport const loadFilterData = createAsyncThunk('/azelis/loadFilterDataStatus', async (_args, thunkAPI) => {\r\n  const api = new Api();\r\n  const slug = thunkAPI.getState().navigation.page;\r\n\r\n  const res = await api.initFilters(slug);\r\n\r\n  return {\r\n    data: res.data,\r\n    slug\r\n  }\r\n})\r\n\r\nconst resetFilterBase = (state) => {\r\n  for (const dataSet of Object.values(state.categories)) {\r\n    for (const filter in dataSet.filters) {\r\n      dataSet.filters[filter] = [];\r\n    }\r\n  }\r\n\r\n  state.search = \"\";\r\n}\r\n\r\nconst azelisSlice = createSlice({\r\n  name: 'azelis',\r\n  initialState: {\r\n    categories: {},\r\n    // product: {\r\n    //   data: [],\r\n    //   filters: boxes.product.reduce((filters, box) => {\r\n    //     filters[box.taxonomy] = [];\r\n    //     return filters;\r\n    //   }, {}),\r\n    //   loading: {\r\n    //     filters: null,\r\n    //     data: null\r\n    //   },\r\n    // },\r\n    search: \"\"\r\n  },\r\n  reducers: {\r\n    toggleFilter: (state, action) => {\r\n      if (!state.categories[action.payload.slug].filters.hasOwnProperty(action.payload.taxonomy)) {\r\n        state.categories[action.payload.slug].filters[action.payload.taxonomy] = [];\r\n      }\r\n\r\n      const filterList = state.categories[action.payload.slug].filters[action.payload.taxonomy];\r\n      const filterIndex = filterList.findIndex(filter => filter === action.payload.termSlug);\r\n\r\n      if (filterIndex !== -1) filterList.splice(filterIndex, 1)\r\n      else filterList.push(action.payload.termSlug)\r\n    },\r\n    setFilterExclusive: (state, action) => {\r\n      if (state.categories[action.payload.slug].filters.hasOwnProperty(action.payload.taxonomy) && state.categories[action.payload.slug].filters[action.payload.taxonomy].includes(action.payload.termSlug)) {\r\n        return;\r\n      }\r\n      for (const filterKey of Object.keys(state.categories[action.payload.slug].filters)) {\r\n        delete state.categories[action.payload.slug].filters[filterKey];\r\n      }\r\n      state.categories[action.payload.slug].filters[action.payload.taxonomy] = [action.payload.termSlug];\r\n    },\r\n    setLoad: (state, action) => {\r\n      if (!['formulations', 'product'].includes(action.payload.slug)) return;\r\n      state[action.payload.slug].loading = action.payload.loading;\r\n    },\r\n    setSearchBox: (state, action) => {\r\n      state.search = action.payload;\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(loadItems.fulfilled, (state, action) => {\r\n      const { data, slug } = action.payload;\r\n      for (const item of data) {\r\n        const internalItemIndex = state.categories[slug].data.findIndex(internalItem => internalItem.id === item.id)\r\n\r\n        if (internalItemIndex === -1) state.categories[slug].data.push(item);\r\n        else state.categories[slug].data.splice(internalItemIndex, 1, {\r\n          ...state.categories[slug].data[internalItemIndex],\r\n          ...item\r\n        })\r\n      }\r\n      state.categories[slug].loading.data = 'fulfilled';\r\n    })\r\n    // builder.addCase(goTo, resetFilterBase)\r\n    builder.addCase(resetFilter, resetFilterBase)\r\n    builder.addCase(doSearch, (state, action) => {\r\n      state.search = action.payload\r\n    })\r\n    builder.addCase(loadFilterData.fulfilled, (state, action) => {\r\n      const { slug, data } = action.payload;\r\n      state.categories[slug].data = data;\r\n      state.categories[slug].loading.filters = 'loaded';\r\n    })\r\n    builder.addCase(initStore.fulfilled, (state, action) => {\r\n      for (const [label, slug] of Object.entries(action.payload.post_types)) {\r\n        state.categories[slug] = {\r\n          label,\r\n          data: [],\r\n          filters: {},\r\n          taxonomies: [... new Set(action.payload.taxonomies[slug])],\r\n          displayType: action.payload.taxonomies[slug].length === 1\r\n            ? 'oneStage'\r\n            : 'twoStage',\r\n          loading: {\r\n            filters: null,\r\n            data: null\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n})\r\n\r\nexport default azelisSlice.reducer\r\nexport const { setSearchBox, setLoad, toggleFilter, setFilterExclusive } = azelisSlice.actions\r\n\r\nexport const selectTabs = (state) => {\r\n  return Object.entries(state.azelis.categories).map(([slug, slugData]) => ({\r\n    slug,\r\n    label: slugData.label\r\n  }))\r\n}\r\nexport const selectTaxonomies = (state) => {\r\n  const slug = state.navigation.page;\r\n  if (!state.azelis.categories.hasOwnProperty(slug)) return [];\r\n\r\n  return state.azelis.categories[slug]?.taxonomies || [];\r\n}\r\n\r\nexport const selectPageType = (state) => {\r\n  const slug = state.navigation.page;\r\n  if (!slug) return null;\r\n\r\n  return state.azelis.categories[slug].displayType;\r\n}\r\nexport const selectResults = (state) => {\r\n  const slug = state.navigation.page;\r\n  if (!slug) return [];\r\n\r\n  return state.azelis.categories[slug].data;\r\n}\r\nexport const selectFilters = (state) => {\r\n  const slug = state.navigation.page;\r\n  if (!slug) return {}\r\n\r\n  return state.azelis.categories[slug].filters;\r\n}\r\nexport const selectSearch = (state) => state.azelis.search;\r\nexport const selectLoading = (state) => {\r\n  const slug = state.navigation.page;\r\n  if (!slug) return {\r\n    filters: 'pending',\r\n    data: 'pending'\r\n  };\r\n\r\n  return state.azelis.categories[slug].loading;\r\n}\r\n\r\nexport const selectFilteredResults = (state) => {\r\n  const slug = state.navigation.page;\r\n  const slugData = state.azelis.categories[slug];\r\n\r\n  const baseFiltered =\r\n    slugData.data.filter(item => (\r\n      Object.entries(state.azelis.categories[slug].filters).every(([taxonomy, filterArray]) => (\r\n        filterArray.some(filter => item.tags.some(tag => tag.taxonomy_label === taxonomy && tag.slug === filter)) || !filterArray.length\r\n      ))\r\n    ))\r\n\r\n  if (!(state.navigation.isSearching && state.navigation.atResults)) return baseFiltered;\r\n  if (!state.azelis.search.length) return baseFiltered;\r\n\r\n  const searchQuery = state.azelis.search;\r\n  const searchKeys =\r\n    [\r\n      {\r\n        name: \"title\",\r\n        weight: 0.6\r\n      },\r\n      {\r\n        name: \"body\",\r\n        weight: 0.4\r\n      },\r\n    ]\r\n\r\n  const searchOptions = {\r\n    keys: searchKeys,\r\n    threshold: 0.4\r\n  }\r\n\r\n  const searchInstance = new Fuse(baseFiltered, searchOptions);\r\n  const searchResults = searchInstance.search(searchQuery)\r\n\r\n  return searchResults.map(result => result.item);\r\n}\r\n\r\nconst selectBoxesFunction = (dynamicTaxonomies, itemsData, globallyFilteredItems, filters) => {\r\n  if (!dynamicTaxonomies.length) return {};\r\n\r\n  const output = dynamicTaxonomies.reduce((boxes, box) => {\r\n    boxes[box.label] = {\r\n      taxonomy: box.name,\r\n      name: box.label,\r\n      terms: []\r\n    }\r\n    return boxes;\r\n  }, {});\r\n\r\n  const taxonomies = dynamicTaxonomies.map(dynamicTaxonomy => dynamicTaxonomy.label);\r\n\r\n  for (const taxonomy of taxonomies) {\r\n    const itemFilters = filters.hasOwnProperty(taxonomy) ? filters[taxonomy] : [];\r\n    const otherFilters = Object.entries(filters).filter(([filterTaxonomy]) => filterTaxonomy !== taxonomy);\r\n\r\n    const filteredItems = itemsData.filter(item => (\r\n      otherFilters.every(([filterTaxonomy, filterArray]) => (\r\n        !filterArray.length || filterArray.every(filter => (\r\n          item.tags\r\n            ? item.tags.some(tag => (\r\n              tag.slug === filter && tag.taxonomy_label === filterTaxonomy\r\n            ))\r\n            : true\r\n        ))\r\n      ))\r\n    ))\r\n\r\n    const tagSlugs = new Set();\r\n    for (const item of filteredItems) {\r\n      for (const tag of item?.tags || []) {\r\n        if (tag.taxonomy_label !== taxonomy) continue;\r\n        if (!tag.name || !tag.slug) continue;\r\n        if (tagSlugs.has(tag.slug)) {\r\n          continue;\r\n        }\r\n\r\n        tagSlugs.add(tag.slug);\r\n\r\n        const count = globallyFilteredItems.filter(item => item.tags.some(itemTag =>\r\n          itemTag.slug === tag.slug && itemTag.taxonomy_label === tag.taxonomy_label\r\n        )).length\r\n\r\n        output[taxonomy].terms.push({\r\n          name: tag.name.replace('&amp;', '&'),\r\n          slug: tag.slug,\r\n          count,\r\n          checked: itemFilters.includes(tag.slug),\r\n          taxonomy: taxonomy\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  return Object.values(output).map(box => {\r\n    const boxCopy = { ...box };\r\n    boxCopy.terms.sort((a, b) => a.name.localeCompare(b.name));\r\n    return boxCopy;\r\n  })\r\n}\r\n\r\nexport const selectAllTerms = (state) => {\r\n  const slug = state.navigation.page;\r\n  if (!state.azelis.categories.hasOwnProperty(slug)) return [];\r\n\r\n  const output = [];\r\n  for (const item of state.azelis.categories[slug].data) {\r\n    for (const tag of item.tags) {\r\n      if (!output.some(outputTag => outputTag.slug === tag.slug && outputTag.taxonomy_label === tag.taxonomy_label)) {\r\n        output.push(tag);\r\n      }\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\nexport const selectBoxes = createSelector([selectTaxonomies, selectResults, selectFilteredResults, selectFilters], selectBoxesFunction)\r\n// export const selectFormulationBoxes = createSelector(\r\n//   [selectFormulations, selectFilteredFormulations, selectFormulationsFilters],\r\n//   selectBoxesFunction(boxes.formulations)\r\n// )\r\n","export function numberWithCommas(x) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nexport const makeShorter = (item, character) => {\r\n  let ellipsis2 = \" ...\";\r\n  let description = \"\";\r\n  if (item.length > character) {\r\n    const words = item.split(\" \");\r\n    let index = 0;\r\n    while (description.length < character) {\r\n      description += words[index] + \" \";\r\n      index++;\r\n    }\r\n    return description + ellipsis2;\r\n  }\r\n\r\n  return item;\r\n};\r\n\r\nexport const pageToSlug = (page) => {\r\n  const map = {\r\n    Ingredients: \"product\",\r\n    Formulas: \"formulations\",\r\n    Trends: \"trends\",\r\n  };\r\n\r\n  return map[page];\r\n};\r\n","import { makeShorter } from \"../../utils/function\";\r\nimport styles from \"./card.module.css\";\r\n\r\nexport default function Card(e) {\r\n  return (\r\n    <div className=\"col-md-4 col-sm-12\" style={{ marginBottom: \"30px\" }}>\r\n      <a\r\n        href={e.item.url}\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n        style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n      >\r\n        <div\r\n          className={styles[\"main-card\"]}\r\n          style={{ height: \"150px\", marginRight: \"5px\" }}\r\n        >\r\n          <div className={styles[\"header-card\"]}>{e.item.title}</div>\r\n          <div className={styles[\"card-des\"]}>\r\n            {makeShorter(e.item.body.replace(e.item.title, \"\"), 170)}\r\n          </div>\r\n        </div>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n","import \"./cardimage.css\";\r\nimport { makeShorter } from \"../../utils/function\";\r\n\r\nexport default function CardImage(e) {\r\n  return (\r\n    <div className=\"col-md-4 col-sm-12\" style={{ marginBottom: \"30px\" }}>\r\n      <a\r\n        href={e.item.url}\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n        style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n      >\r\n        <div\r\n          className=\"main-card\"\r\n          style={{ height: \"271px\", marginRight: \"5px\" }}\r\n        >\r\n          <div\r\n            className=\"card-image\"\r\n            style={{ backgroundImage: \"url(\" + e.item.thumbnail + \")\" }}\r\n          ></div>\r\n          <div className=\"card-content\">\r\n            <div className=\"card-title\">{e.item.title}</div>\r\n            <div className=\"card-des\">{makeShorter(e.item.body, 120)}</div>\r\n          </div>\r\n        </div>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n","import { useDispatch } from \"react-redux\";\r\nimport { resetFilter } from \"../../../Redux/globalActions\";\r\nimport \"./filter.css\";\r\n\r\nfunction Badge({ name, close }) {\r\n  return (\r\n    <div className=\"badge-body-filter\">\r\n      <pre style={{ marginTop: \"revert\", fontFamily: \"MuseoSans-500\" }}>\r\n        {name}\r\n      </pre>\r\n      <i\r\n        style={{ paddingLeft: \"10px\", marginTop: \"-2px\", cursor: \"pointer\" }}\r\n        onClick={() => close(name)}\r\n        className=\"fa fa-times\"\r\n      ></i>\r\n    </div>\r\n  );\r\n}\r\nexport default function Filter({ list, onClose, on_click_reset_filter }) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"little-filter-main\">\r\n      <div\r\n        onClick={() => {\r\n          dispatch(resetFilter());\r\n        }}\r\n        className=\"filter-reset-button\"\r\n      >\r\n        Reset\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport \"./boxtype.css\";\r\nimport { numberWithCommas, pageToSlug } from \"../../utils/function\";\r\n\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport \"react-loading-skeleton/dist/skeleton.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toggleFilter } from \"../../Redux/slices/azelis/azelisSlice\";\r\nimport { selectPage } from \"../../Redux/slices/navigationSlice\";\r\n\r\nexport function CheckLineLittle({\r\n  style,\r\n  slug,\r\n  taxonomy,\r\n  checked,\r\n  name,\r\n  count,\r\n}) {\r\n  const dispatch = useDispatch();\r\n\r\n  const section = useSelector(selectPage);\r\n\r\n  const handleChange = () => {\r\n    console.log(taxonomy);\r\n    dispatch(\r\n      toggleFilter({\r\n        taxonomy,\r\n        termSlug: slug,\r\n        slug: section,\r\n      })\r\n    );\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"checkline-main\" style={style}>\r\n      <div className=\"checkline-left-container\">\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={checked}\r\n          onChange={handleChange}\r\n          className=\"checkline-checkbox\"\r\n        />\r\n        <span className=\"checkline-name-product\">{name}</span>\r\n      </div>\r\n      <span className=\"checkline-number-result\">\r\n        {\" \"}\r\n        ({numberWithCommas(count)})\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\nexport function CheckLine({ style, name, count, checked, slug, taxonomy }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const section = useSelector(selectPage);\r\n\r\n  const handleChange = () => {\r\n    dispatch(\r\n      toggleFilter({\r\n        termSlug: slug,\r\n        taxonomy: taxonomy,\r\n        slug: section,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"checkline-main\" style={style}>\r\n      <div className=\"checkline-left-container\">\r\n        <input\r\n          checked={checked}\r\n          onChange={handleChange}\r\n          type=\"checkbox\"\r\n          className=\"checkline-checkbox\"\r\n          id={slug}\r\n        />\r\n        <label htmlFor={slug} className=\"checkline-name-product\">\r\n          {name}\r\n        </label>\r\n      </div>\r\n      <span className=\"checkline-number-result\">\r\n        {\" \"}\r\n        ({numberWithCommas(count)})\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Boxtype({ label, terms, isLoading }) {\r\n  return (\r\n    <div\r\n      className=\"boxtype-main\"\r\n      style={\r\n        !isLoading && !terms?.length\r\n          ? {\r\n              border: \"2px solid gray\",\r\n              opacity: \"60%\",\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      <div className=\"boxtype-body\">\r\n        <div className=\"boxtype-header\">{label}</div>\r\n        {isLoading ? (\r\n          <div style={{ paddingTop: \"10px\" }}>\r\n            <Skeleton count={15} style={{ marginTop: \"5px\" }} />\r\n          </div>\r\n        ) : (\r\n          terms.map((term) => (\r\n            <CheckLine\r\n              key={term.slug}\r\n              slug={term.slug}\r\n              taxonomy={term.taxonomy}\r\n              checked={term.checked}\r\n              name={term.name}\r\n              count={term.count}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Boxtype;\r\n","import { useState, useRef } from \"react\";\r\nimport { BsChevronDown } from \"react-icons/bs\"\r\n\r\nconst Accordion = ({ items }) => {\r\n  const [accordianState, setAccordianState] = useState(items.reduce((accordianState, item) => {\r\n    accordianState[item.key] = false;\r\n    return accordianState;\r\n  }, {}))\r\n\r\n  const handleToggle = (itemKey) => () => {\r\n    console.log('clicked');\r\n    setAccordianState(oldState => ({\r\n      ...oldState,\r\n      [itemKey]: !oldState[itemKey]\r\n    }))\r\n  }\r\n\r\n  if (!items.length) return null;\r\n  return (\r\n    <div style={styles.accordian}>\r\n      {items.map(item => (\r\n        <AccordionItem item={item} expanded={accordianState[item.key]} onClick={handleToggle(item.key)} key={item.key} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst AccordionItem = ({ item, expanded, onClick }) => {\r\n  const accordianBodyRef = useRef();\r\n\r\n  return (\r\n    <div style={{\r\n      ...styles.accordianItem,\r\n      cursor: item.expandable ? 'pointer' : 'default'\r\n    }}>\r\n      <div style={styles.accordianHeader} onClick={onClick}>\r\n        <div>{item.header}</div>\r\n        <div style={{\r\n          ...styles.chevron,\r\n          ...(item.expandable && expanded ? styles.chevronExpanded : {})\r\n        }}>\r\n          {\r\n            item.expandable\r\n              ? <BsChevronDown color='gray' />\r\n              : <div style={styles.chevronNull} />\r\n          }\r\n        </div>\r\n      </div>\r\n      {Boolean(item.alwaysBody) &&\r\n        <div>\r\n          {item.alwaysBody}\r\n        </div>\r\n      }\r\n      <div\r\n        style={{\r\n          ...styles.accordianBody,\r\n          ...((expanded || item.alwaysShow) ? accordianExpanded(accordianBodyRef?.current?.scrollHeight) : {})\r\n        }}\r\n        ref={accordianBodyRef}\r\n      >\r\n        {item.body}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst styles = {\r\n  accordian: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n  },\r\n  accordianItem: {\r\n    borderTop: '1px solid rgb(214, 214, 216)'\r\n  },\r\n  accordianHeader: {\r\n    height: '55px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    fontWeight: 'bold'\r\n  },\r\n  accordianBody: {\r\n    transition: 'max-height 0.2s ease-out',\r\n    maxHeight: '0px',\r\n    overflow: 'hidden',\r\n  },\r\n  chevron: {\r\n    transition: 'transform 0.2s ease-out'\r\n  },\r\n  chevronExpanded: {\r\n    transform: 'rotate(180deg)'\r\n  },\r\n  chevronNull: {\r\n    height: '1px',\r\n    backgroundColor: 'hsl(0, 0%, 70%)',\r\n    width: '13px',\r\n    margin: '0px 2px'\r\n  }\r\n}\r\n\r\nconst accordianExpanded = (scrollHeight) => ({\r\n  maxHeight: `${scrollHeight}px`,\r\n})\r\n\r\nexport { Accordion }\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\n\r\nimport \"./checkbox.css\";\r\nimport { CheckLineLittle } from \"./../../boxtype/boxtype\";\r\nimport { Accordion } from \"../../util/Accordion\"\r\n\r\nexport default function SideFilter({ filterBoxes }) {\r\n  const accordionItems = useMemo(() => {\r\n    if (!filterBoxes.length) return [];\r\n\r\n    const termToCheckLine = (term) => (\r\n      <CheckLineLittle\r\n        key={term.slug}\r\n        style={{ padding: \"0 1.25rem\" }}\r\n        slug={term.slug}\r\n        taxonomy={term.taxonomy}\r\n        checked={term.checked}\r\n        name={term.name}\r\n        count={term.count}\r\n      />\r\n    )\r\n\r\n    return filterBoxes.map((filterBox) => {\r\n      const checked = filterBox.terms.filter(term => term.checked);\r\n      const unchecked = filterBox.terms.filter(term => !term.checked);\r\n\r\n      return {\r\n        key: filterBox.name,\r\n        header: `${filterBox.name} (${filterBox.terms.length})`,\r\n        body: (\r\n          <div style={{ paddingBottom: unchecked.length ? '30px' : '0px' }}>\r\n            {unchecked.map(termToCheckLine)}\r\n          </div>\r\n        ),\r\n        alwaysBody: (\r\n          <div style={{ paddingBottom: checked.length ? '30px' : '0px' }}>\r\n            {checked.map(termToCheckLine)}\r\n          </div>\r\n        ),\r\n        expandable: Boolean(unchecked.length)\r\n      }\r\n    })\r\n  }, [filterBoxes])\r\n\r\n  // if (error) {\r\n  //   return <div>Error: {error.message}</div>;\r\n  // } else if (!isLoaded) {\r\n  //   return <div></div>;\r\n  // } else {\r\n  if (!accordionItems?.length) return null;\r\n  return (\r\n    <div style={{ marginTop: \"20px\" }}>\r\n      <Accordion items={accordionItems} />\r\n    </div>\r\n  );\r\n  // }\r\n}\r\n","import \"./menu.css\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectAllTerms, selectFilters, setFilterExclusive } from \"../../../Redux/slices/azelis/azelisSlice\";\r\nimport { selectPage } from \"../../../Redux/slices/navigationSlice\";\r\n\r\nfunction MenuTrend() {\r\n  const terms = useSelector(selectAllTerms);\r\n  const filters = useSelector(selectFilters);\r\n  const section = useSelector(selectPage);\r\n  const dispatch = useDispatch();\r\n\r\n  console.log(terms);\r\n\r\n  const clickHandler = async (term) => {\r\n    dispatch(setFilterExclusive({\r\n      termSlug: term.slug,\r\n      slug: section,\r\n      taxonomy: term.taxonomy_label\r\n    }))\r\n  }\r\n\r\n  const isActive = (termSlug) => Object.values(filters).some(filterList => filterList.includes(termSlug))\r\n\r\n  return (\r\n    <div className=\"menu-box\">\r\n      {/* {Boolean(terms.length) && ( */}\r\n      {/*   <p */}\r\n      {/*     className={`text-menu ${activeTerm === -1 ? 'menu-text-active' : ''}`} */}\r\n      {/*     onClick={() => clickHandler(-1)} */}\r\n      {/*   > */}\r\n      {/*     All Trends */}\r\n      {/*   </p> */}\r\n      {/* )} */}\r\n      {terms.map((term, i) => (\r\n        <p\r\n          className={`text-menu ${isActive(term.slug) ? 'menu-text-active' : ''}`}\r\n          key={term}\r\n          onClick={() => clickHandler(term)}\r\n        >\r\n          {term.name}\r\n        </p>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MenuTrend\r\n","import { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectLoading, loadFilterData, loadItems } from '../../Redux/slices/azelis/azelisSlice'\r\n\r\nconst useLoadSection = () => {\r\n  const dispatch = useDispatch();\r\n  const loadingState = useSelector(selectLoading);\r\n\r\n  useEffect(() => {\r\n    if (loadingState.filters === null) {\r\n      dispatch(loadFilterData())\r\n    }\r\n    if (loadingState.filters === 'loaded' && loadingState.data === null) {\r\n      dispatch(loadItems())\r\n    }\r\n  }, [loadingState])\r\n\r\n  return;\r\n}\r\n\r\nexport default useLoadSection;\r\n","import \"./BoxResults.css\";\r\nimport Card from \"../card/card\";\r\nimport CardImage from \"../cardimage/cardimage\";\r\nimport { numberWithCommas } from \"../../utils/function\";\r\nimport LittleFilter from \"./filter/filter\";\r\nimport SideFilter from \"./SideFilter\";\r\nimport TrendsFilter from \"./TrendsFilter\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  goBack,\r\n  selectPage,\r\n  showResults,\r\n} from \"../../Redux/slices/navigationSlice\";\r\nimport {\r\n  loadItems,\r\n  selectLoading,\r\n  selectBoxes,\r\n  selectFilteredResults,\r\n  selectPageType,\r\n} from \"../../Redux/slices/azelis/azelisSlice\";\r\nimport useLoadSection from \"../../utils/hooks/useLoadSection\";\r\n\r\nexport default function BoxResults({}) {\r\n  const dispatch = useDispatch();\r\n  const section = useSelector(selectPage);\r\n\r\n  const filterBoxes = useSelector(selectBoxes);\r\n\r\n  const results = useSelector(selectFilteredResults);\r\n  const loadState = useSelector(selectLoading);\r\n  const pageType = useSelector(selectPageType);\r\n\r\n  const useImageCard = results.some((result) => result?.thumbnail);\r\n\r\n  useLoadSection();\r\n\r\n  const moveTopSearch = () => {\r\n    window.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"box-results-main\">\r\n          <div className=\"d-flex align-items-center justify-content-between btn-area\">\r\n            <div className=\"d-flex align-items-center results-btn\">\r\n              <button\r\n                className=\"results-back\"\r\n                onClick={() => {\r\n                  if (pageType === \"oneStage\") dispatch(goBack());\r\n                  else dispatch(showResults(false));\r\n                }}\r\n              >\r\n                <i\r\n                  className=\"fa fa-chevron-left\"\r\n                  style={{ fontSize: \"12px\" }}\r\n                ></i>{\" \"}\r\n                Back to search\r\n              </button>\r\n              <div>{section !== \"Trends\" && <LittleFilter />}</div>\r\n            </div>\r\n            <div className=\"d-flex align-items-center selection-btn\">\r\n              <span className=\"number-result-box-tag\">Current Selection</span>{\" \"}\r\n              &nbsp;\r\n              <a className=\"number-result-box-results\">\r\n                {loadState.data === \"fulfilled\"\r\n                  ? numberWithCommas(results.length)\r\n                  : \"\"}\r\n                &nbsp; results\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-3 order-1 order-lg-1 left-box-results\">\r\n              {pageType === \"twoStage\" ? (\r\n                <SideFilter filterBoxes={filterBoxes} />\r\n              ) : (\r\n                <TrendsFilter />\r\n              )}\r\n            </div>\r\n            <div\r\n              className=\"col-lg-9  order-2 order-lg-2 mb-5 mb-lg-0 right-box-results\"\r\n              style={{ paddingLeft: \"40px\", paddingTop: \"20px\" }}\r\n            >\r\n              <div className=\"row\">\r\n                {loadState.data === \"fulfilled\" ? (\r\n                  results.map((result, i) =>\r\n                    useImageCard ? (\r\n                      <CardImage\r\n                        item={result}\r\n                        key={result.id.toString() + result.title}\r\n                      />\r\n                    ) : (\r\n                      <Card item={result} key={result.id + i.toString()} />\r\n                    )\r\n                  )\r\n                ) : (\r\n                  <>\r\n                    <div className=\"box-results-loading-container\">\r\n                      <ReactLoading type=\"spin\" color=\"#59b8ec\" />\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n              <Button\r\n                variant=\"primary\"\r\n                size=\"sm\"\r\n                className=\"back-to-top-btn\"\r\n                onClick={moveTopSearch}\r\n              >\r\n                Back To Top\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nfunction useWindowSize() {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n    handleResize();\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowSize;\r\n}\r\n\r\nexport default useWindowSize;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\n// Import Swiper React components\r\n// import { isMobileOnly } from \"react-device-detect\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, { Navigation, Pagination } from \"swiper\";\r\nimport useWindowSize from \"../../hooks/useWindowSize\";\r\nimport \"swiper/swiper-bundle.min.css\";\r\nimport \"swiper/swiper.min.css\";\r\nimport \"swiper/components/navigation/navigation.min.css\";\r\nimport \"swiper/components/pagination/pagination.min.css\";\r\nimport \"./index.css\";\r\nimport { numberWithCommas } from \"../../utils/function\";\r\nimport Boxtype from \"../boxtype/boxtype\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  selectLoading,\r\n  selectBoxes,\r\n  selectFilteredResults,\r\n} from \"../../Redux/slices/azelis/azelisSlice\";\r\nimport { selectPage, showResults } from \"../../Redux/slices/navigationSlice\";\r\nimport { resetFilter } from \"../../Redux/globalActions\";\r\nimport useLoadSection from \"../../utils/hooks/useLoadSection\";\r\n\r\n// Import Swiper styles\r\n\r\nSwiperCore.use([Pagination, Navigation]);\r\n\r\nfunction FormulasBoxFilter() {\r\n  const boxes = useSelector(selectBoxes);\r\n  const section = useSelector(selectPage);\r\n\r\n  const totalCount = useSelector(selectFilteredResults)?.length || 0;\r\n\r\n  const dispatch = useDispatch();\r\n  const loadingState = useSelector(selectLoading);\r\n\r\n  useLoadSection();\r\n\r\n  const size = useWindowSize();\r\n  const [breakPoints, setBreakPoints] = useState(4);\r\n\r\n  useEffect(() => {\r\n    if (!size) return;\r\n    if (size.width > 1000) {\r\n      setBreakPoints(4);\r\n    } else if (size.width > 768) {\r\n      setBreakPoints(3);\r\n    } else if (size.width > 600) {\r\n      setBreakPoints(2);\r\n    } else {\r\n      setBreakPoints(1);\r\n    }\r\n  }, [size]);\r\n\r\n  const SwiperSlides = useMemo(() => {\r\n    return boxes.map((filterBox, i) => (\r\n      <SwiperSlide key={`${section}-${i}`}>\r\n        <Boxtype\r\n          label={filterBox.name}\r\n          terms={filterBox.terms}\r\n          key={filterBox.name}\r\n          isLoading={loadingState.filters !== \"loaded\"}\r\n        />\r\n      </SwiperSlide>\r\n    ));\r\n  }, [boxes, loadingState, breakPoints]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div className=\"box-number-result\">\r\n          <div>\r\n            <a\r\n              className=\"reset-button\"\r\n              onClick={() => {\r\n                dispatch(resetFilter());\r\n              }}\r\n              style={{ fontFamily: \"MuseoSans-500\" }}\r\n            >\r\n              Reset\r\n            </a>\r\n            <button\r\n              className=\"button-result\"\r\n              onClick={() => {\r\n                dispatch(showResults(true));\r\n              }}\r\n            >\r\n              <span className=\"view-result-text\">View Results</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"mt-2\">\r\n            <span className=\"box-number-result-span number-result-box-tag\">\r\n              Current Selection\r\n            </span>{\" \"}\r\n            <a className=\"link-number-result\">\r\n              {totalCount ? numberWithCommas(totalCount) : \"...\"} results{\" \"}\r\n            </a>\r\n          </div>\r\n        </div>\r\n        {Boolean(SwiperSlides.length) && (\r\n          <Swiper\r\n            spaceBetween={30}\r\n            navigation={true}\r\n            observer={true}\r\n            slidesPerView={breakPoints}\r\n            key={`swiper-${section}`}\r\n          >\r\n            {SwiperSlides}\r\n          </Swiper>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  slideContainer: {\r\n    display: \"flex\",\r\n    gap: \"30px\",\r\n    marginBottom: \"15px\",\r\n  },\r\n};\r\n\r\nexport default FormulasBoxFilter;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { goTo, doSearch, resetFilter } from '../globalActions'\r\nimport { initStore } from './azelis/azelisSlice'\r\n\r\nimport BoxResults from '../../component/boxresults/BoxResults'\r\nimport FilterBoxPage from '../../component/FilterBoxPage'\r\n\r\nexport const navigationSlice = createSlice({\r\n  name: 'navigation',\r\n  initialState: {\r\n    previous: null,\r\n    page: null,\r\n    validPages: [],\r\n    atResults: false,\r\n    isSearching: false\r\n  },\r\n  reducers: {\r\n    showResults: (state, action) => {\r\n      state.atResults = action.payload;\r\n      if (action.payload === false) state.isSearching = false;\r\n    },\r\n    goBack: (state) => {\r\n      if (!state.previous) return;\r\n      state.page = state.previous;\r\n      state.previous = null;\r\n\r\n      state.atResults = false;\r\n      state.isSearching = false;\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(goTo, (state, action) => {\r\n      if (!state.validPages.includes(action.payload)) return;\r\n\r\n      state.atResults = false;\r\n      state.isSearching = false;\r\n      state.previous = state.page;\r\n      state.page = action.payload;\r\n    })\r\n    builder.addCase(doSearch, (state) => {\r\n      state.atResults = true;\r\n      state.isSearching = true;\r\n    })\r\n    builder.addCase(resetFilter, (state) => {\r\n      state.isSearching = false;\r\n    })\r\n    builder.addCase(initStore.fulfilled, (state, action) => {\r\n      const pages = Object.values(action.payload.post_types);\r\n      state.validPages = pages;\r\n      state.page = pages[0];\r\n    })\r\n  }\r\n})\r\n\r\nexport const { showResults, goBack } = navigationSlice.actions;\r\n\r\nexport default navigationSlice.reducer;\r\n\r\nexport const selectPage = state => state.navigation.page;\r\nexport const selectPreviousPage = state => state.navigation.previous;\r\nexport const selectAtResults = state => state.navigation.atResults;\r\nexport const selectIsSearching = state => state.navigation.isSearching;\r\nexport const selectDisplayComponent = (state) => {\r\n  if (!state.navigation.page) return () => null;\r\n\r\n  const currentCategory = state.navigation.page;\r\n  const categoryData = state.azelis.categories[currentCategory];\r\n\r\n  const { displayType } = categoryData;\r\n  if (displayType === 'oneStage' || state.navigation.atResults) return BoxResults\r\n  else return FilterBoxPage\r\n}\r\n","import \"./navbar.css\"\r\nimport { selectPage } from \"../../Redux/slices/navigationSlice\"\r\nimport { goTo } from '../../Redux/globalActions'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectTabs } from \"../../Redux/slices/azelis/azelisSlice\";\r\n\r\nconst Navbar = () => {\r\n  const tabs = useSelector(selectTabs)\r\n  const activeTab = useSelector(selectPage);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div style={{ margin: \"10px 0\" }}>\r\n      <div className=\"box-hc\">\r\n        {tabs.map(({ slug, label }) => (\r\n          <span\r\n            style={activeTab === slug ? styles.active : styles.inactive}\r\n            onClick={() => {\r\n              dispatch(goTo(slug));\r\n            }}\r\n            className=\"text-hc\"\r\n            key={slug}\r\n          >\r\n            {label}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst styles = {\r\n  active: {\r\n    borderBottom: 'solid 2px #1E7BE2',\r\n    fontFamily: 'MuseoSans-500'\r\n  },\r\n  inactive: {\r\n    color: '#8E8E8E',\r\n    fontFamily: 'MuseoSans-300'\r\n  }\r\n}\r\n\r\nexport default Navbar\r\n","import React, { createRef, useEffect, useState } from \"react\"\r\nimport \"./searchbar.css\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { doSearch } from '../../Redux/globalActions'\r\nimport { setSearchBox, selectSearch } from '../../Redux/slices/azelis/azelisSlice'\r\n\r\nfunction Topresult({ from, list, all, text, helper = false }) {\r\n  return (\r\n    <div>\r\n      <span className=\"top-result-found\">Top results found from {from}</span>\r\n      <hr style={{ margin: 0 }} />\r\n      <div style={{ padding: \"5px\" }}>\r\n        {all ? (\r\n          <span className=\"all-result-from\">All results for \"{text}\"</span>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {list.map((e, i) => (\r\n          <div\r\n            key={e}\r\n            onMouseDown={() => console.log(e)}\r\n            className=\"text-top-result\"\r\n          >\r\n            {e}\r\n            &nbsp;\r\n            {helper ? <span className=\"little-helper\">little helper</span> : \"\"}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction Searchbar() {\r\n  const dispatch = useDispatch();\r\n\r\n  const query = useSelector(selectSearch);\r\n  const [localQuery, setLocalQuery] = useState(query);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault()\r\n\r\n    dispatch(doSearch(localQuery))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (query !== localQuery) setLocalQuery(query);\r\n  }, [query]);\r\n  return (\r\n    <div>\r\n      <div className=\"search-main\">\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            placeholder=\"Search Keyword, Tradename, INCI\"\r\n            type=\"text\"\r\n            className=\"searchbar-text\"\r\n            onChange={(e) => { setLocalQuery(e.target.value) }}\r\n            value={localQuery}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"search-buttonsearch\"\r\n          >\r\n            <i className=\"fa fa-search\"></i>\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* <div */}\r\n      {/*   id=\"sodjlf\" */}\r\n      {/*   tabIndex=\"0\" */}\r\n      {/*   ref={focusDiv} */}\r\n      {/*   className=\"box-result-search\" */}\r\n      {/*   hidden={!boxVisible} */}\r\n      {/* > */}\r\n      {/*   <Topresult */}\r\n      {/*     from=\"Formulas\" */}\r\n      {/*     list={[\"Hair cut\", \"Hair shop\", \"Hair ser\", \"hd kdo\"]} */}\r\n      {/*     text={itemSearch} */}\r\n      {/*   /> */}\r\n\r\n      {/*   <Topresult */}\r\n      {/*     from=\"Ingredients\" */}\r\n      {/*     list={[\"Hair cut\", \"Hair shop\", \"Hair ser\", \"hd kdo\"]} */}\r\n      {/*     text={itemSearch} */}\r\n      {/*     all={true} */}\r\n      {/*     helper={true} */}\r\n      {/*   /> */}\r\n\r\n      {/*   <Topresult */}\r\n      {/*     from=\"Trends\" */}\r\n      {/*     list={[\"Hair cut\", \"Hair shop\", \"Hair ser\", \"hd kdo\"]} */}\r\n      {/*     text={itemSearch} */}\r\n      {/*     all={true} */}\r\n      {/*   /> */}\r\n      {/* </div> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Searchbar\r\n","import \"./App.css\";\r\n\r\nimport Navbar from \"./component/Navbar\";\r\nimport Searchbar from \"./component/searchbar/searchbar\";\r\nimport BoxResults from \"./component/boxresults/BoxResults\";\r\n\r\nimport { selectAtResults, selectDisplayComponent, selectPage } from \"./Redux/slices/navigationSlice\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\n\r\nimport getRoute from \"./routes\"\r\nimport { initStore } from \"./Redux/slices/azelis/azelisSlice\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(initStore());\r\n  }, [])\r\n\r\n  const DisplayComponent = useSelector(selectDisplayComponent);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Searchbar />\r\n      <Navbar />\r\n      <DisplayComponent />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport navigationReducer from './slices/navigationSlice'\r\nimport azelisReducer from './slices/azelis/azelisSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    navigation: navigationReducer,\r\n    azelis: azelisReducer\r\n  }\r\n})\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\nimport reportWebVitals from \"./reportWebVitals\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"font-awesome/css/font-awesome.min.css\"\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from './Redux/store.js'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}